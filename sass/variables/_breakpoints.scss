// Map of breakpoints.
$breakpoints: (
        xs: 375px,
        sm: 425px,
        xmd: 768px,
        md: 1024px,
        lg: 1440px,
        xlg: 1620px
);


//  RESPOND ABOVE

// @include respond-above(sm) {}
@mixin respond-above($breakpoint) {

  @if map-has-key($breakpoints, $breakpoint) {

    $breakpoint-value: map-get($breakpoints, $breakpoint);

    @media (min-width: $breakpoint-value) {
      @content;
    }

    // If the breakpoint doesn't exist in the map.
  } @else {
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}


//  RESPOND BELOW

// @include respond-below(sm) {}
@mixin respond-below($breakpoint) {

  @if map-has-key($breakpoints, $breakpoint) {

    $breakpoint-value: map-get($breakpoints, $breakpoint);

    @media (max-width: ($breakpoint-value - 1)) {
      @content;
    }

    // If the breakpoint doesn't exist in the map.
  } @else {
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}


//  RESPOND BETWEEN

// @include respond-between(sm, md) {}
@mixin respond-between($lower, $upper) {

  @if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {

    $lower-breakpoint: map-get($breakpoints, $lower);
    $upper-breakpoint: map-get($breakpoints, $upper);

    @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {
      @content;
    }

    // If one or both of the breakpoints don't exist.
  } @else {
    @if (map-has-key($breakpoints, $lower) == false) {
      @warn 'Your lower breakpoint was invalid: #{$lower}.';
    }

    @if (map-has-key($breakpoints, $upper) == false) {
      @warn 'Your upper breakpoint was invalid: #{$upper}.';
    }
  }
}

//example
//@include respond-below(sm) {
//  .element {
//    font-weight: bold;
//  }
//}
